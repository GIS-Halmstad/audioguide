/* If BODY has the loading class, hide the app */
body.loading #app {
  display: none;
}

/* If BODY doesn't have the loading class, hide the splash screen */
body:not(.loading) #splash-screen {
  display: none;
}

/* If BODY has the loading class, show the splash screen */
body.loading #splash-screen {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: #ffffff;
  display: flex;
  justify-content: center;
  align-items: center;
}

.loading-icon {
  border: 8px solid #3498db;
  border-top: 8px solid #ffffff;
  border-radius: 50%;
  width: 50px;
  height: 50px;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

.app-logo {
  max-height: var(--f7-navbar-height);
  margin-left: calc(
    var(--f7-card-expandable-margin-horizontal) + var(--f7-safe-area-left)
  );
  margin-right: 20px;
}

/** START: HIDE NAVBAR WHEN A GUIDE IS ACTIVE **/

/* These element need a transition */
.navbar,
.page-content,
#map {
  transition: all 1s ease;
}

/* Navbar should go straight up, outside the viewport */
.has-active-guide .navbar {
  top: calc(0px - var(--f7-navbar-height));
}

/* Map, as well as everything else, is inside a .page-content
   element, which by default has some padding (to accomodate for the
   navbar). We need to remove that padding, so that we can tell map
   to expand vertically to 100%. */
.has-active-guide .page-content {
  padding-top: 0;
}

/* Now, when padding's on parent element has been removed, 
   Map can fill the viewport */
.has-active-guide #map {
  height: 100%;
}

/** END: HIDE NAVBAR WHEN A GUIDE IS ACTIVE **/

/* Left Panel right border when it is visible by breakpoint */
.panel-left.panel-in-breakpoint:before {
  position: absolute;
  right: 0;
  top: 0;
  height: 100%;
  width: 1px;
  background: rgba(0, 0, 0, 0.1);
  content: "";
  z-index: 6000;
}

/* In desktop mode, don't soften the panel corner. Btw, the reason why 
   specificity of this selector is such (preceded by .md and .ios) is to
   avoid adding "!important". Without it, another selector that _adds_ 
   border-radius would take precedence.*/
.md .panel-left.panel-in-breakpoint,
.ios .panel-left.panel-in-breakpoint {
  border-radius: 0px;
}

/* Hide navbar link which opens left panel when it is visible by breakpoint */
.panel-left.panel-in-breakpoint ~ .view .navbar .panel-open[data-panel="left"] {
  display: none;
}

/*
  Extra borders for main view and left panel for iOS theme when it behaves as panel (before breakpoint size)
*/
.ios .panel-left:not(.panel-in-breakpoint).panel-in ~ .view-main:before,
.ios .panel-left:not(.panel-in-breakpoint).panel-closing ~ .view-main:before {
  position: absolute;
  left: 0;
  top: 0;
  height: 100%;
  width: 1px;
  background: rgba(0, 0, 0, 0.1);
  content: "";
  z-index: 6000;
}

/* New Cards */

.card .card-header {
  height: 150px;
  background-size: cover;
  background-position: center;
}

@media (min-width: 768px) {
  .cards-grid {
    display: flex;
    flex-wrap: wrap;
  }
  .cards-grid .card {
    flex-shrink: 10;
    min-width: 0;
  }
}
@media (min-width: 768px) and (max-width: 1023px) {
  .cards-grid .card {
    width: calc(
      (100% - calc(var(--f7-card-expandable-margin-horizontal) * 2) * 3) / 2
    );
  }
  .cards-grid .card:nth-child(2),
  .cards-grid .card:nth-child(4) {
    margin-left: 0;
  }
  .cards-grid .card:nth-child(n + 3) {
    margin-top: 0;
  }
}
@media (min-width: 1024px) {
  .cards-grid .card {
    width: calc(
      (100% - calc(var(--f7-card-expandable-margin-horizontal) * 2) * 4) / 3
    );
    margin-right: 0;
  }
}

/* Sheet Modal */
@media ((min-width: 460px)) {
  .sheet-modal {
    /* set max width */
    width: 400px;
    /* add some shadow */
    box-shadow: var(--f7-card-box-shadow);
    margin-left: var(--f7-message-margin);
  }
}

/* Limit width of .sheet-modal on large screens */
@media (min-width: 960px) {
  .sheet-modal {
    margin-left: calc(var(--f7-panel-width) + var(--f7-message-margin));
  }
}

/* Sheet Swipe To Close */

.sheet-modal {
  --f7-sheet-border-color: transparent;
  border-radius: 15px 15px 0 0;
  overflow: hidden;
}

.swipe-handler {
  height: 16px;
  position: absolute;
  left: 0;
  width: 100%;
  top: 0;
  background: none;
  cursor: pointer;
  z-index: 10;
}

.swipe-handler:after {
  content: "";
  width: 36px;
  height: 6px;
  position: absolute;
  left: 50%;
  top: 50%;
  margin-left: -18px;
  margin-top: -3px;
  border-radius: 3px;
  background-color: #fff;
}

/* Swiper Element custom styles */
swiper-container {
  height: 150px;
  width: 100%;
}

swiper-container::part(bullet) {
  background-color: var(--f7-md-surface);
  opacity: 0.8;
}

swiper-container::part(bullet-active) {
  background-color: #fff;
}

swiper-container .swiper-slide-custom {
  width: 100%;
  height: 150px;
  display: flex;
  justify-content: center;
  align-items: center;
}

swiper-container .image-container {
  width: 100%;
  height: 100%;
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
}

/* A Fullscreen Swiper solution */
#fullscreen-swiper {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 14000;
}
#fullscreen-swiper .link {
  z-index: 14001;
  position: absolute;
  top: calc(15px + var(--f7-safe-area-top));
  right: calc(15px + var(--f7-safe-area-right));
  color: #fff;
}

#fullscreen-swiper swiper-container {
  height: 100%;
  width: 100%;
}
#fullscreen-swiper swiper-container .image-container {
  background-color: #000;
  background-size: contain;
}
